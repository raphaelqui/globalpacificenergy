import DateTimeFormatOptions from './DateTimeFormatOptions';
import Formats from './Formats';
import IntlError from './IntlError';
import NumberFormatOptions from './NumberFormatOptions';
import TimeZone from './TimeZone';
type Props = {
    locale: string;
    timeZone?: TimeZone;
    onError?(error: IntlError): void;
    formats?: Partial<Formats>;
    now?: Date;
};
export default function createFormatter({ formats, locale, now: globalNow, onError, timeZone }: Props): {
    dateTime: (value: Date | number, formatOrOptions?: string | DateTimeFormatOptions) => string;
    number: (value: number | bigint, formatOrOptions?: string | NumberFormatOptions) => string;
    relativeTime: (date: number | Date, now?: number | Date) => string;
    list: (value: Iterable<string>, formatOrOptions?: string | Intl.ListFormatOptions) => string;
};
export {};
