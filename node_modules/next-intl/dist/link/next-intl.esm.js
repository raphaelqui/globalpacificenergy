import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../_virtual/next-intl.esm.js';
import React, { forwardRef } from 'react';
import useClientLocale from '../client/next-intl.esm2.js';
import BaseLink from '../shared/next-intl.esm3.js';

var _excluded = ["locale"];
function Link(_ref, ref) {
  var locale = _ref.locale,
    rest = _objectWithoutPropertiesLoose(_ref, _excluded);
  var defaultLocale = useClientLocale();
  return React.createElement(BaseLink, _extends({
    ref: ref,
    locale: locale || defaultLocale
  }, rest));
}
/**
 * Wraps `next/link` and prefixes the `href` with the current locale if
 * necessary.
 *
 * @example
 * ```tsx
 * import {Link} from 'next-intl';
 *
 * // When the user is on `/en`, the link will point to `/en/about`
 * <Link href="/about">About</Link>
 *
 * // You can override the `locale` to switch to another language
 * <Link href="/" locale="de">Switch to German</Link>
 * ```
 *
 * Note that when a `locale` prop is passed to switch the locale, the `prefetch`
 * prop is not supported. This is because Next.js would prefetch the page and
 * the `set-cookie` response header would cause the locale cookie on the current
 * page to be overwritten before the user even decides to change the locale.
 */
var Link$1 = /*#__PURE__*/forwardRef(Link);

export { Link$1 as default };
//# sourceMappingURL=next-intl.esm.js.map
