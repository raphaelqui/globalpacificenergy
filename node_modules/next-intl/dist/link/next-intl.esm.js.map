{"version":3,"file":"next-intl.esm.js","sources":["../../src/link/Link.tsx"],"sourcesContent":["import React, {ComponentProps, forwardRef} from 'react';\nimport useClientLocale from '../client/useClientLocale';\nimport BaseLink from '../shared/BaseLink';\n\ntype Props = Omit<ComponentProps<typeof BaseLink>, 'locale'> & {\n  locale?: string;\n};\n\nfunction Link({locale, ...rest}: Props, ref: Props['ref']) {\n  const defaultLocale = useClientLocale();\n  return <BaseLink ref={ref} locale={locale || defaultLocale} {...rest} />;\n}\n\n/**\n * Wraps `next/link` and prefixes the `href` with the current locale if\n * necessary.\n *\n * @example\n * ```tsx\n * import {Link} from 'next-intl';\n *\n * // When the user is on `/en`, the link will point to `/en/about`\n * <Link href=\"/about\">About</Link>\n *\n * // You can override the `locale` to switch to another language\n * <Link href=\"/\" locale=\"de\">Switch to German</Link>\n * ```\n *\n * Note that when a `locale` prop is passed to switch the locale, the `prefetch`\n * prop is not supported. This is because Next.js would prefetch the page and\n * the `set-cookie` response header would cause the locale cookie on the current\n * page to be overwritten before the user even decides to change the locale.\n */\nexport default forwardRef(Link);\n"],"names":["Link","_ref","ref","locale","rest","_objectWithoutPropertiesLoose","_excluded","defaultLocale","useClientLocale","React","createElement","BaseLink","_extends","forwardRef"],"mappings":";;;;;;AAQA,SAASA,IAAIA,CAAAC,IAAA,EAA2BC,GAAiB,EAAA;AAAA,EAAA,IAA1CC,MAAM,GAAAF,IAAA,CAANE,MAAM;AAAKC,IAAAA,IAAI,GAAAC,6BAAA,CAAAJ,IAAA,EAAAK,SAAA,CAAA,CAAA;AAC5B,EAAA,IAAMC,aAAa,GAAGC,eAAe,EAAE,CAAA;AACvC,EAAA,OAAOC,KAAC,CAAAC,aAAA,CAAAC,QAAQ,EAAAC,QAAA,CAAA;AAACV,IAAAA,GAAG,EAAEA,GAAG;IAAEC,MAAM,EAAEA,MAAM,IAAII,aAAAA;GAAmBH,EAAAA,IAAI,EAAI,CAAA;AAC1E,CAAA;AAEA;;;;;;;;;;;;;;;;;;;AAmBG;AACH,aAAeS,aAAAA,UAAU,CAACb,IAAI,CAAC;;;;"}