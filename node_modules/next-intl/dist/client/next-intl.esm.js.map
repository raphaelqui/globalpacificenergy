{"version":3,"file":"next-intl.esm.js","sources":["../../src/client/useRouter.tsx"],"sourcesContent":["import {useRouter as useNextRouter} from 'next/navigation';\nimport {useMemo} from 'react';\nimport {localizeHref} from '../shared/utils';\nimport useClientLocale from './useClientLocale';\n\ntype IntlNavigateOptions = {\n  locale?: string;\n};\n\n/**\n * Returns a wrapped instance of `useRouter` from `next/navigation` that\n * will automatically localize the `href` parameters it receives.\n *\n * @example\n * ```tsx\n * 'use client';\n *\n * import {useRouter} from 'next-intl/client';\n *\n * const router = useRouter();\n *\n * // When the user is on `/en`, the router will navigate to `/en/about`\n * router.push('/about');\n *\n * // Optionally, you can switch the locale by passing the second argument\n * router.push('/about', {locale: 'de'});\n * ```\n */\nexport default function useRouter() {\n  const router = useNextRouter();\n  const locale = useClientLocale();\n\n  return useMemo(() => {\n    function localize(href: string, nextLocale?: string) {\n      return localizeHref(\n        href,\n        nextLocale || locale,\n        locale,\n        window.location.pathname\n      );\n    }\n\n    return {\n      ...router,\n      push(\n        href: string,\n        options?: Parameters<typeof router.push>[1] & IntlNavigateOptions\n      ) {\n        const {locale: nextLocale, ...rest} = options || {};\n        const args: [\n          href: string,\n          options?: Parameters<typeof router.push>[1]\n        ] = [localize(href, nextLocale)];\n        if (Object.keys(rest).length > 0) {\n          args.push(rest);\n        }\n        return router.push(...args);\n      },\n\n      replace(\n        href: string,\n        options?: Parameters<typeof router.replace>[1] & IntlNavigateOptions\n      ) {\n        const {locale: nextLocale, ...rest} = options || {};\n        const args: [\n          href: string,\n          options?: Parameters<typeof router.replace>[1]\n        ] = [localize(href, nextLocale)];\n        if (Object.keys(rest).length > 0) {\n          args.push(rest);\n        }\n        return router.replace(...args);\n      },\n\n      prefetch(\n        href: string,\n        options?: Parameters<typeof router.prefetch>[1] & IntlNavigateOptions\n      ) {\n        const {locale: nextLocale, ...rest} = options || {};\n        const args: [\n          href: string,\n          options?: Parameters<typeof router.prefetch>[1]\n        ] = [localize(href, nextLocale)];\n        if (Object.keys(rest).length > 0) {\n          // @ts-expect-error TypeScript thinks `rest` can be an empty object\n          args.push(rest);\n        }\n        return router.prefetch(...args);\n      }\n    };\n  }, [locale, router]);\n}\n"],"names":["useRouter","router","useNextRouter","locale","useClientLocale","useMemo","localize","href","nextLocale","localizeHref","window","location","pathname","_extends","push","options","_ref","rest","_objectWithoutPropertiesLoose","_excluded","args","Object","keys","length","apply","replace","_ref2","_excluded2","prefetch","_ref3","_excluded3"],"mappings":";;;;;;;;;AASA;;;;;;;;;;;;;;;;;;AAkBG;AACW,SAAUA,SAASA,GAAA;AAC/B,EAAA,IAAMC,MAAM,GAAGC,WAAa,EAAE,CAAA;AAC9B,EAAA,IAAMC,MAAM,GAAGC,eAAe,EAAE,CAAA;EAEhC,OAAOC,OAAO,CAAC,YAAK;AAClB,IAAA,SAASC,QAAQA,CAACC,IAAY,EAAEC,UAAmB,EAAA;AACjD,MAAA,OAAOC,YAAY,CACjBF,IAAI,EACJC,UAAU,IAAIL,MAAM,EACpBA,MAAM,EACNO,MAAM,CAACC,QAAQ,CAACC,QAAQ,CACzB,CAAA;AACH,KAAA;IAEA,OAAAC,QAAA,KACKZ,MAAM,EAAA;AACTa,MAAAA,IAAI,EAAAA,SAAAA,IAAAA,CACFP,IAAY,EACZQ,OAAiE,EAAA;AAEjE,QAAA,IAAAC,IAAA,GAAsCD,OAAO,IAAI,EAAE;UAApCP,UAAU,GAAAQ,IAAA,CAAlBb,MAAM;AAAiBc,UAAAA,IAAI,GAAAC,6BAAA,CAAAF,IAAA,EAAAG,SAAA,CAAA,CAAA;QAClC,IAAMC,IAAI,GAGN,CAACd,QAAQ,CAACC,IAAI,EAAEC,UAAU,CAAC,CAAC,CAAA;QAChC,IAAIa,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC,CAACM,MAAM,GAAG,CAAC,EAAE;AAChCH,UAAAA,IAAI,CAACN,IAAI,CAACG,IAAI,CAAC,CAAA;AAChB,SAAA;QACD,OAAOhB,MAAM,CAACa,IAAI,CAAAU,KAAA,CAAXvB,MAAM,EAASmB,IAAI,CAAC,CAAA;OAC5B;AAEDK,MAAAA,OAAO,EAAAA,SAAAA,OAAAA,CACLlB,IAAY,EACZQ,OAAoE,EAAA;AAEpE,QAAA,IAAAW,KAAA,GAAsCX,OAAO,IAAI,EAAE;UAApCP,UAAU,GAAAkB,KAAA,CAAlBvB,MAAM;AAAiBc,UAAAA,IAAI,GAAAC,6BAAA,CAAAQ,KAAA,EAAAC,UAAA,CAAA,CAAA;QAClC,IAAMP,IAAI,GAGN,CAACd,QAAQ,CAACC,IAAI,EAAEC,UAAU,CAAC,CAAC,CAAA;QAChC,IAAIa,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC,CAACM,MAAM,GAAG,CAAC,EAAE;AAChCH,UAAAA,IAAI,CAACN,IAAI,CAACG,IAAI,CAAC,CAAA;AAChB,SAAA;QACD,OAAOhB,MAAM,CAACwB,OAAO,CAAAD,KAAA,CAAdvB,MAAM,EAAYmB,IAAI,CAAC,CAAA;OAC/B;AAEDQ,MAAAA,QAAQ,EAAAA,SAAAA,QAAAA,CACNrB,IAAY,EACZQ,OAAqE,EAAA;AAErE,QAAA,IAAAc,KAAA,GAAsCd,OAAO,IAAI,EAAE;UAApCP,UAAU,GAAAqB,KAAA,CAAlB1B,MAAM;AAAiBc,UAAAA,IAAI,GAAAC,6BAAA,CAAAW,KAAA,EAAAC,UAAA,CAAA,CAAA;QAClC,IAAMV,IAAI,GAGN,CAACd,QAAQ,CAACC,IAAI,EAAEC,UAAU,CAAC,CAAC,CAAA;QAChC,IAAIa,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC,CAACM,MAAM,GAAG,CAAC,EAAE;AAChC;AACAH,UAAAA,IAAI,CAACN,IAAI,CAACG,IAAI,CAAC,CAAA;AAChB,SAAA;QACD,OAAOhB,MAAM,CAAC2B,QAAQ,CAAAJ,KAAA,CAAfvB,MAAM,EAAamB,IAAI,CAAC,CAAA;AACjC,OAAA;AAAC,KAAA,CAAA,CAAA;AAEL,GAAC,EAAE,CAACjB,MAAM,EAAEF,MAAM,CAAC,CAAC,CAAA;AACtB;;;;"}